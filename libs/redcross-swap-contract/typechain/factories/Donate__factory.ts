/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Donate } from "../Donate";

export class Donate__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(router: string, overrides?: Overrides): Promise<Donate> {
    return super.deploy(router, overrides || {}) as Promise<Donate>;
  }
  getDeployTransaction(
    router: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(router, overrides || {});
  }
  attach(address: string): Donate {
    return super.attach(address) as Donate;
  }
  connect(signer: Signer): Donate__factory {
    return super.connect(signer) as Donate__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Donate {
    return new Contract(address, _abi, signerOrProvider) as Donate;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "priceLimit",
        type: "uint160",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
      {
        internalType: "address",
        name: "b",
        type: "address",
      },
    ],
    name: "getTokenInTokenOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a97380380610a9783398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6109fe6100996000398061010e52806101d5528061033f52506109fe6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631bcbd64f1461003b57806359e924f514610050575b600080fd5b61004e610049366004610852565b610079565b005b61006361005e3660046107fa565b610426565b604051610070919061091f565b60405180910390f35b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff80871682528581166020830181905262ffffff851683850152306060840152633b9aca004201608084015260a083018a905260c0830189905290851660e083015291517f095ea7b300000000000000000000000000000000000000000000000000000000815290919063095ea7b390610138907f0000000000000000000000000000000000000000000000000000000000000000908a906004016108f9565b602060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a9190610832565b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063095ea7b3906101ff907f0000000000000000000000000000000000000000000000000000000000000000908b906004016108f9565b602060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190610832565b506102916040518060400160405280601b81526020017f54727920746f207472616e7366657220616d6f756e7420696e3a20000000000081525088610444565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906323b872dd906102e790339030908c906004016108c8565b602060405180830381600087803b15801561030157600080fd5b505af1158015610315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103399190610832565b5061041c7f00000000000000000000000000000000000000000000000000000000000000008260405160240161036f919061092a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f78095a6e000000000000000000000000000000000000000000000000000000001790528151808301909252601782527f444f4e4154494f4e202d20524f55544552204552524f5200000000000000000090820152610542565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff90811691161190565b61053e82826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561048f578181015183820152602001610477565b50505050905090810190601f1680156104bc5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052935061055b92505050565b5050565b6060610551848460008561057c565b90505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060824710156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109cc6026913960400191505060405180910390fd5b6105e085610736565b61064b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106106b457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610677565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610716576040519150601f19603f3d011682016040523d82523d6000602084013e61071b565b606091505b509150915061072b82828661073c565b979650505050505050565b3b151590565b6060831561074b575081610554565b82511561075b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107bf5781810151838201526020016107a7565b50505050905090810190601f1680156107ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000806040838503121561080c578182fd5b8235610817816109a6565b91506020830135610827816109a6565b809150509250929050565b600060208284031215610843578081fd5b81518015158114610554578182fd5b60008060008060008060c0878903121561086a578182fd5b86359550602087013594506040870135610883816109a6565b93506060870135610893816109a6565b925060808701356108a3816109a6565b915060a087013562ffffff811681146108ba578182fd5b809150509295509295509295565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b60006101008201905073ffffffffffffffffffffffffffffffffffffffff80845116835280602085015116602084015262ffffff60408501511660408401528060608501511660608401526080840151608084015260a084015160a084015260c084015160c08401528060e08501511660e08401525092915050565b73ffffffffffffffffffffffffffffffffffffffff811681146109c857600080fd5b5056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6ca164736f6c6343000706000a";
